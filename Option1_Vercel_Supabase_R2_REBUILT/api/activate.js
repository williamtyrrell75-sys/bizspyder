
import { Pool } from 'pg'
const pool = new Pool({ connectionString: process.env.DATABASE_URL })
export default async function handler(req,res){ if(req.method!=='POST') return res.status(405).end(); const { key, device_hash, os, hostname } = req.body||{}; if(!key||!device_hash||!os) return res.status(400).json({error:'Missing fields'}); const L=await pool.query('select * from licenses where license_key=$1',[key]); if(!L.rowCount) return res.status(404).json({error:'Invalid key'}); const lic=L.rows[0]; if(lic.status!=='active') return res.status(403).json({error:'License not active'}); const used=await pool.query('select count(*)::int as c from license_activations where license_id=$1',[lic.id]); const count=used.rows[0].c; const exist=await pool.query('select 1 from license_activations where license_id=$1 and device_hash=$2',[lic.id,device_hash]); if(!exist.rowCount && count>=lic.max_devices) return res.status(409).json({error:'Device limit reached (3/3).'}); if(!exist.rowCount) await pool.query('insert into license_activations(license_id, device_hash, os, hostname) values ($1,$2,$3,$4)',[lic.id,device_hash,os,hostname||null]); res.json({ok:true,max:lic.max_devices}); }
